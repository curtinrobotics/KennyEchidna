controller_manager:
  
  ros__parameters:
    update_rate: 10 #Hz

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    arm_position_controller:
      type: forward_command_controller/ForwardCommandController

    arm_trajectory_controller:
      type: "joint_trajectory_controller/JointTrajectoryController"

    kenny_base_controller:
      type: "diff_drive_controller/DiffDriveController"

    # shoulder_controller:
    #   type: velocity_controllers/JointVelocityController

    # elbow_controller:
    #   type: velocity_controllers/JointVelocityController

    # wrist_controller:
    #   type: velocity_controllers/JointVelocityController

    # reel_joint_controller:
    #   type: velocity_controllers/JointVelocityController

    # joint_camera_z_rotation_controller:
    #   type: velocity_controllers/JointVelocityController
      
    # joint_camera_y_rotation_controller:
    #   type: velocity_controllers/JointVelocityController


# #------------- publish all joint states
# joint_state_controller:
#   ros__parameters:
#     state: joint_state_controller/JointStateController
#     publish_rate: 50

# ----------------- velocity controllers - drivebase

kenny_base_controller:
  ros__parameters:
    left_wheel_names: ['joint_base_wheel_left']
    right_wheel_names: ['joint_base_wheel_right']
    # Wheel separation and diameter. These are both optional.
    # diff_drive_controller will attempt to read either one or both from the
    # URDF if not specified as a parameter
    wheel_separation : 0.444
    wheel_radius : 0.2
    
    publish_rate: 50.0
    
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    
    cmd_vel_timeout: 0.25
    velocity_rolling_window_size: 2

    base_frame_id: base_link

    # Wheel separation and radius multipliers
    # wheel_separation_multiplier: 1.0 # default: 1.0
    # wheel_radius_multiplier    : 1.0 # default: 1.0

    # Velocity commands timeout [s], default 0.5
    cmd_vel_timeout: 0.25

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 1.0  # m/s
        # min_velocity           : -0.5 # m/s
        has_acceleration_limits: true
        max_acceleration       : 3.0  # m/s^2
        # min_acceleration       : -0.4 # m/s^2
        # has_jerk_limits        : true
        # max_jerk               : 5.0  # m/s^3
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 2.0  # rad/s
        has_acceleration_limits: true
        max_acceleration       : 6.0  # rad/s^2
        # has_jerk_limits        : true
        # max_jerk               : 2.5  # rad/s^3

arm_position_controller:
  ros__parameters:
    joints:
      - shoulder
      - elbow
      - wrist
    interface_name: position


arm_trajectory_controller:
  ros__parameters:
    joints:
      - shoulder
      - elbow
      - wrist

    command_interfaces:
      - position

    state_interfaces:
      - position

    state_publish_rate: 200.0 # Defaults to 50
    action_monitor_rate: 20.0 # Defaults to 20

    allow_partial_joints_goal: false # Defaults to false
    open_loop_control: true
    allow_integration_in_goal_trajectories: true
    constraints:
      stopped_velocity_tolerance: 0.01 # Defaults to 0.01
      goal_time: 0.0 # Defaults to 0.0 (start immediately)

# ----------------- velocity controllers - arms
# shoulder_controller:
#   ros__parameters:
#     type: velocity_controllers/JointVelocityController
#     joint: shoulder
#     pid: {p: 100.0, i: 0.01, d: 10.0}

# elbow_controller:
#   ros__parameters:
#     type: velocity_controllers/JointVelocityController
#     joint: elbow
#     pid: {p: 100.0, i: 0.01, d: 10.0}

# wrist_controller:
#   ros__parameters:
#     type: velocity_controllers/JointVelocityController
#     joint: wrist
#     pid: {p: 100.0, i: 0.01, d: 10.0}

# reel_joint_controller:
#   ros__parameters:
#     type: velocity_controllers/JointVelocityController
#     joint: reel_joint
#     pid: {p: 100.0, i: 0.01, d: 10.0}

# # ----------------- velocity controllers - camera mechanism

# joint_camera_z_rotation_controller:
#   ros__parameters:
#     type: velocity_controllers/JointVelocityController
#     joint: joint_camera_z_rotation
#     pid: {p: 100.0, i: 0.01, d: 10.0}
  
# joint_camera_y_rotation_controller:
#   ros__parameters:
#     type: velocity_controllers/JointVelocityController
#     joint: joint_camera_y_rotation
#     pid: {p: 100.0, i: 0.01, d: 10.0}
